<!DOCTYPE html>
<html lang="ko">

<head>
  <% include ./head %>
</head>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js"></script>

</head>

<body>
  <div class="home">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
      <a class="navbar-brand" href="/">토론판 돌아가기</a>
      <button class="btn btn-outline-success" onclick="waitingStart()">입장</button>
    </nav>
  </div>
  <div class="waiting" style="display:none">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
      <a class="navbar-brand" href="/">토론판 돌아가기</a>
      <button class="btn btn-danger" onclick="waitingCancel()">대기열 나가기</button>
    </nav>
  </div>
  <div class="chatting" style="display:none;">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
      <a class="navbar-brand" href="#">토론판 돌아가기</a>
      <button class="btn btn-success" onclick="chattingCancel()">채팅방 나가기</button>
    </nav>
    <div class="container chatContainer">
      <div class="chatLogs"></div>
    </div>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-bottom">
      <textarea class="form-control" id="messageInput" rows="2"></textarea>
      <button class="btn btn-success" onclick="send()">보내기</button>
    </nav>
  </div>
</body>

<script type="text/javascript">
  const socket = io.connect('http://localhost');
  let userId;
  socket.on("connected", (socketId) => {
    userId = socketId;
  })

  const waitingStart = () => {
    try {
      socket.emit("waitingStart");
    } catch {
      alert("서버가 닫혀 있습니다");
    } finally {
      $('.home').hide();
      $('.waiting').show();
      $('.chatting').hide();
      $('.chatLogs').html("");
    }
  };

  const waitingCancel = () => {
    try {
      socket.emit("waitingCancel");
    } catch {
      alert("서버가 닫혀 있습니다");
    } finally {
      $('.home').show();
      $('.waiting').hide();
      $('.chatting').hide();
      $('.chatLogs').html("");
    }
  };

  const chattingCancel = () => {
    try {
      socket.emit("chattingCancel");
    } catch {
      alert("서버가 닫혀 있습니다");
    } finally {
      $('.home').show();
      $('.waiting').hide();
      $('.chatting').hide();
      $('.chatLogs').html("");
    }
  };

  const send = () => {
    const message = $('#messageInput').val();
    $('#messageInput').val('');

    if (message.length < 1) {
      alert('내용을 입력하세요.');
      return;
    }
    socket.emit('messageSend', message);
    $('.chatLogs').append(
      `<div class="row mt-4">
        <div class="col-4"></div>
        <div class="col-8 text-right">
        <span style=
            "padding:5px;
            background-color: rgb(182,231,219);
            border : 1px solid rgb(230,230,230);
            border-radius: 15px;">
          나 : ` +
      message + `</span></div></div>`);
    $(document).scrollTop($(document).height());
  }

  // 대화를 받았을 때
  socket.on('messageReceive', message => {
    $('.chatLogs').append(
      `<div class="row mt-4">
        <div class="col-8 text-left">
          <span style=
            "padding:5px;
            background-color: rgb(255,216,217);
            border : 1px solid rgb(230,230,230);
            border-radius: 15px;">
            상대방 : ` + message +
      `</span></div><div class="col-4"></div></div>`);
    $(document).scrollTop($(document).height());
  });

  // 매칭완료되었을 때
  socket.on('chattingStart', () => {

    $('.home').hide();
    $('.waiting').hide();
    $('.chatting').show();
    $('.chatLogs').append(
      `<div class="row" style="margin-top:60px;">
          <div class="col-12 text-center">
          <div class="alert alert-dark" role="alert">
            상대방을 발견하였습니다.
          </div></div>
        <div class="col-12 text-center">
          <div class="alert alert-dark" role="alert">
            채팅이 시작되었습니다.
          </div></div></div>`);
    $(document).scrollTop($(document).height());
  });


  // 채팅 취소
  socket.on('chattingCancel', function(data) {
    $('.home').show();
    $('.waiting').hide();
    $('.chatting').hide();
    $('.chatLogs').html("");
  });

  // 상대방이 채팅 취소
  socket.on('chattingCancelled', () => { //서버 -> 클라이언트
    $('.home').hide();
    $('.waiting').hide();
    $('.chatting').show();
    $('.chatLogs').append(
      `<div class="row mt-4">
        <div class="col-12 text-center">
          <div class="alert alert-dark" role="alert">
            상대방이 채팅방을 나갔습니다
          </div></div></div>`);
    $(document).scrollTop($(document).height());
  });

  // 엔터입력 시
  $('#messageInput').keyup((e) => {
    if (e.keyCode == 13) {
      send();
    }
  });
</script>


</html>
